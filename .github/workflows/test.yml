name: List Repositories

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install tomlq
        run: |
          python -m pip install tomlq

      - name: Get repos
        id: set-matrix
        run: |
          page=1
          result=()
          repo_info=""
          while true; do
            repos=$(curl -s -H "Authorization: token ${{ secrets.API_GITHUB }}" "https://api.github.com/orgs/LedgerHQ/repos?page=$page&per_page=200")
            
            if ! echo "$repos" | jq -e '.[].name' >/dev/null; then
              # all repos have been listed
              echo "all repos have been listed"
              break
            fi
            
            # Ajouter les noms des dépôts à la liste result
            for repo in $(echo "$repos" | jq -r '.[] | select((.name | startswith("app-")) and (.archived == false) and (.private == false)) | .name'); do
              result+=("$repo")
            done

            ((page++))
          done
          
          for repo in "${result[@]}"; do
            toml_content=$(curl -s "https://raw.githubusercontent.com/LedgerHQ/$repo/develop/ledger_app.toml")
            if [[ ! $toml_content =~ "404: Not Found" ]] && [[ ! $toml_content =~ "rust-app" ]]; then
              
              # Récupérer les attributs du fichier toml
              build_directory=$(echo "$toml_content" | tomlq -r '.app.build_directory')
              sdk=$(echo "$toml_content" | tomlq -r '.app.sdk')
              devices=$(echo "$toml_content" | tomlq -r '.app.devices | join(", ")')
              repo_info+="Repo: $repo, build_directory: $build_directory, sdk: $sdk, devices: $devices\n"              
            else
              echo "$repo does not   contain ledger_app.toml"
            fi
          done
          echo "pouet"
          echo "rep inf : $repo_info"
          echo "matrix=$repo_info" >> $GITHUB_OUTPUT
          
  test-build:
    name: Build for all targets
    needs: [prepare-matrix]
    strategy:
      fail-fast: false
      matrix:
        ${{ fromJSON(needs.prepare-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone App
        uses: actions/checkout@v3
        with:
          repository: LedgerHQ/${{ matrix.Repo }}
          submodules: true

      - name: Build Path
        run: |
          echo "build path"
          echo "build_directory=${{ matrix.build_directory }}" >> $GITHUB_ENV